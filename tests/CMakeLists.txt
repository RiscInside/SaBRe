set (LIT_AUTOGENERATED_WARNING "This file is autogenerated, do not edit!")
find_program(BASH_PATH bash)
find_program(TIMEOUT_PATH timeout)

set(SABRE_AVAILABLE_TEST_DEPS "")
macro(ADD_TEST_DEP feature)
  list(APPEND SABRE_AVAILABLE_TEST_DEPS "\"${feature}\"")
endmacro(ADD_TEST_DEP)

if(RDTSC)
  ADD_TEST_DEP(rdtsc)
endif()

macro(FIND_TEST_DEP prog)
  string(TOUPPER "${prog}" p)
  find_program("TEST_${p}_PATH" ${prog})
  if(NOT TEST_${p}_PATH)
    message (AUTHOR_WARNING "${prog} not found")
  else()
    ADD_TEST_DEP(${prog})
  endif()

  # Hide programs from cmake cache
  mark_as_advanced("TEST_${p}_PATH")
endmacro(FIND_TEST_DEP)

include(CheckCCompilerFlag)
include(CMakePushCheckState)
CMAKE_PUSH_CHECK_STATE(RESET)
SET(CMAKE_REQUIRED_FLAGS "-fsanitize=thread") # Also needs to be a link flag for test to pass
CHECK_C_COMPILER_FLAG("-fsanitize=thread" tsan_avail)
CMAKE_POP_CHECK_STATE()
if(NOT tsan_avail)
  message(AUTHOR_WARNING "ThreadSanitizer is not supported by the system compiler")
else()
  ADD_TEST_DEP(tsan)
endif()

FIND_TEST_DEP(clang)
FIND_TEST_DEP(gcc)

FIND_TEST_DEP(bunzip2)
FIND_TEST_DEP(bzip2)
FIND_TEST_DEP(cat)
FIND_TEST_DEP(chacl)
FIND_TEST_DEP(chgrp)
FIND_TEST_DEP(chmod)
FIND_TEST_DEP(cp)
FIND_TEST_DEP(date)
FIND_TEST_DEP(dbus-uuidgen)
FIND_TEST_DEP(dd)
FIND_TEST_DEP(dmesg)
FIND_TEST_DEP(dumpkeys)
FIND_TEST_DEP(ed)
FIND_TEST_DEP(efibootmgr)
FIND_TEST_DEP(fgconsole)
FIND_TEST_DEP(fuser)
FIND_TEST_DEP(grep)
FIND_TEST_DEP(gzip)
FIND_TEST_DEP(ip)
FIND_TEST_DEP(kill)
FIND_TEST_DEP(kmod)
FIND_TEST_DEP(lessecho)
FIND_TEST_DEP(ln)
FIND_TEST_DEP(loginctl)
FIND_TEST_DEP(ls)
FIND_TEST_DEP(lsmod)
FIND_TEST_DEP(mktemp)
FIND_TEST_DEP(mount)
FIND_TEST_DEP(nano)
FIND_TEST_DEP(nc)
FIND_TEST_DEP(ntfs-3g)
FIND_TEST_DEP(openvt)
FIND_TEST_DEP(ping)
FIND_TEST_DEP(ps)
FIND_TEST_DEP(sed)
FIND_TEST_DEP(setfacl)
FIND_TEST_DEP(su)
FIND_TEST_DEP(tar)

string(REPLACE ";" "," SABRE_AVAILABLE_TEST_DEPS_STR "${SABRE_AVAILABLE_TEST_DEPS}")
configure_file("lit.cfg.in" "${CMAKE_CURRENT_BINARY_DIR}/lit.cfg" @ONLY)
configure_file("Utils/test_help.sh" "${CMAKE_CURRENT_BINARY_DIR}/Utils/test_help.sh" @ONLY)

foreach(link "" "-static")
  foreach(pie "-no-pie" "-pie")
    configure_file("ld/test.c.in" "${CMAKE_CURRENT_BINARY_DIR}/ld/test_${link}_${pie}.c" @ONLY)
  endforeach(pie)
endforeach(link)

configure_file("ld/lit.cfg.in" "${CMAKE_CURRENT_BINARY_DIR}/ld/lit.cfg" @ONLY)

add_custom_target(tests lit -v --timeout 30 "${CMAKE_CURRENT_BINARY_DIR}")
