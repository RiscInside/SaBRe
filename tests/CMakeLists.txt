set (LIT_AUTOGENERATED_WARNING "This file is autogenerated, do not edit!")
find_program(BASH_PATH bash)
find_program(TIMEOUT_PATH timeout)

macro(FIND_PROGRAM_FATAL prog)
  string(TOUPPER "${prog}" p)
  find_program("TEST_${p}_PATH" ${prog})
  # message($TEST_{p}_PATH " " ${TEST_${p}_PATH})
  if (NOT TEST_${p}_PATH)
    message (FATAL_ERROR "${prog} not found")
  endif ()

  # Hide programs from cmake cache
  mark_as_advanced("TEST_${p}_PATH")
endmacro(FIND_PROGRAM_FATAL)

include(CheckCCompilerFlag)
include(CMakePushCheckState)
CMAKE_PUSH_CHECK_STATE(RESET)
    SET(CMAKE_REQUIRED_FLAGS "-fsanitize=thread") # Also needs to be a link flag for test to pass
    CHECK_C_COMPILER_FLAG("-fsanitize=thread" tsan_avail)
CMAKE_POP_CHECK_STATE()
if(NOT tsan_avail)
  message(FATAL_ERROR "ThreadSanitizer is not supported by the system compiler")
endif()

FIND_PROGRAM_FATAL(clang)
FIND_PROGRAM_FATAL(gcc)

FIND_PROGRAM_FATAL(bunzip2)
FIND_PROGRAM_FATAL(bzip2)
FIND_PROGRAM_FATAL(cat)
FIND_PROGRAM_FATAL(chacl)
FIND_PROGRAM_FATAL(chgrp)
FIND_PROGRAM_FATAL(chmod)
FIND_PROGRAM_FATAL(cp)
FIND_PROGRAM_FATAL(date)
FIND_PROGRAM_FATAL(dbus-uuidgen)
FIND_PROGRAM_FATAL(dd)
FIND_PROGRAM_FATAL(dmesg)
FIND_PROGRAM_FATAL(dumpkeys)
FIND_PROGRAM_FATAL(ed)
FIND_PROGRAM_FATAL(efibootmgr)
FIND_PROGRAM_FATAL(fgconsole)
FIND_PROGRAM_FATAL(fuser)
FIND_PROGRAM_FATAL(grep)
FIND_PROGRAM_FATAL(gzip)
FIND_PROGRAM_FATAL(ip)
FIND_PROGRAM_FATAL(kill)
FIND_PROGRAM_FATAL(kmod)
FIND_PROGRAM_FATAL(lessecho)
FIND_PROGRAM_FATAL(ln)
FIND_PROGRAM_FATAL(loginctl)
FIND_PROGRAM_FATAL(ls)
FIND_PROGRAM_FATAL(lsmod)
FIND_PROGRAM_FATAL(mktemp)
FIND_PROGRAM_FATAL(mount)
FIND_PROGRAM_FATAL(nano)
FIND_PROGRAM_FATAL(nc)
FIND_PROGRAM_FATAL(ntfs-3g)
FIND_PROGRAM_FATAL(openvt)
FIND_PROGRAM_FATAL(ping)
FIND_PROGRAM_FATAL(ps)
FIND_PROGRAM_FATAL(sed)
FIND_PROGRAM_FATAL(setfacl)
FIND_PROGRAM_FATAL(su)
FIND_PROGRAM_FATAL(tar)

configure_file("lit.cfg.in" "${CMAKE_CURRENT_BINARY_DIR}/lit.cfg" @ONLY)
configure_file("Utils/test_help.sh" "${CMAKE_CURRENT_BINARY_DIR}/Utils/test_help.sh" @ONLY)

foreach(link "" "-static")
  foreach(pie "-no-pie" "-pie")
    configure_file("ld/test.c.in" "${CMAKE_CURRENT_BINARY_DIR}/ld/test_${link}_${pie}.c" @ONLY)
  endforeach(pie)
endforeach(link)

configure_file("ld/lit.cfg.in" "${CMAKE_CURRENT_BINARY_DIR}/ld/lit.cfg" @ONLY)

add_custom_target(tests lit -v --timeout 30 "${CMAKE_CURRENT_BINARY_DIR}")
